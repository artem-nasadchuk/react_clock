{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["timeToString","date","toUTCString","slice","Clock","state","clockTime","Date","timeIntervalId","this","window","setInterval","setState","console","info","clearInterval","clockName","props","className","Component","getRandomName","value","now","toString","App","hasClock","nameIntervalId","handleContextMenu","event","preventDefault","handleClick","document","addEventListener","_","prevState","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUMA,EAAe,SAACC,GAAD,OAAgBA,EAAKC,cAAcC,OAAO,IAAK,IAEvDC,EAAb,4MACEC,MAAQ,CACNC,UAAW,IAAIC,MAFnB,EAKEC,eAAiB,EALnB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,eAAiBE,OAAOC,aAAY,WACvC,EAAKC,SAAS,CACZN,UAAW,IAAIC,OAGjB,IAAQD,EAAc,EAAKD,MAAnBC,UAGRO,QAAQC,KAAKd,EAAaM,MACzB,OAjBP,kCAoBE,WACEI,OAAOK,cAAcN,KAAKD,kBArB9B,oBAwBE,WACE,IAAQQ,EAAcP,KAAKQ,MAAnBD,UACAV,EAAcG,KAAKJ,MAAnBC,UAER,OACE,sBAAKY,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGlB,EAAaM,YArCxB,GAA2Ba,aCR3B,SAASC,IACP,IAAMC,EAAQd,KAAKe,MAAMC,WAAWpB,OAAO,GAE3C,MAAM,SAAN,OAAgBkB,GAQX,IAAMG,EAAb,4MACEnB,MAAQ,CACNoB,UAAU,EACVT,UAAW,WAHf,EAMEU,eAAiB,EANnB,EAkCEC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKjB,SAAS,CAAEa,UAAU,KApC9B,EAuCEK,YAAc,WACZ,EAAKlB,SAAS,CAAEa,UAAU,KAxC9B,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAevB,KAAKkB,mBAC9CI,SAASC,iBAAiB,QAASvB,KAAKqB,aAExCrB,KAAKiB,eAAiBhB,OAAOC,aAAY,WACvC,EAAKC,SAAS,CACZI,UAAWI,QAEZ,QAhBP,gCAmBE,SAAmBa,EAAOC,GACxB,MAAgCzB,KAAKJ,MAA7BoB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,UAEbkB,EAAUlB,YAAcA,GAAcS,GAEzCZ,QAAQsB,MAAR,uBAA8BD,EAAUlB,UAAxC,eAAwDA,MAxB9D,kCA4BE,WACEe,SAASK,oBAAoB,cAAe3B,KAAKkB,mBACjDI,SAASK,oBAAoB,QAAS3B,KAAKqB,aAC3CpB,OAAOK,cAAcN,KAAKiB,kBA/B9B,oBA2CE,WACE,MAAgCjB,KAAKJ,MAA7BoB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,UAElB,OACE,sBAAKE,UAAU,MAAf,UACE,6CAICO,GACC,cAAC,EAAD,CAAOT,UAAWA,WArD5B,GAAyBG,aCZzBkB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.9105aee0.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  clockTime: Date;\n};\n\nconst timeToString = (date: Date) => date.toUTCString().slice(-12, -4);\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    clockTime: new Date(),\n  };\n\n  timeIntervalId = 0;\n\n  componentDidMount() {\n    this.timeIntervalId = window.setInterval(() => {\n      this.setState({\n        clockTime: new Date(),\n      });\n\n      const { clockTime } = this.state;\n\n      // eslint-disable-next-line no-console\n      console.info(timeToString(clockTime));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timeIntervalId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { clockTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {timeToString(clockTime)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  nameIntervalId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleClick);\n\n    this.nameIntervalId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n  }\n\n  componentDidUpdate(_: {}, prevState: Readonly<State>) {\n    const { hasClock, clockName } = this.state;\n\n    if ((prevState.clockName !== clockName) && hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('click', this.handleClick);\n    window.clearInterval(this.nameIntervalId);\n  }\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          React clock\n        </h1>\n\n        {hasClock && (\n          <Clock clockName={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}